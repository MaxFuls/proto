// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: registry/registry.proto

package pipeline

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegistryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port          string                 `protobuf:"bytes,3,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegistryRequest) Reset() {
	*x = RegistryRequest{}
	mi := &file_registry_registry_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryRequest) ProtoMessage() {}

func (x *RegistryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_registry_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryRequest.ProtoReflect.Descriptor instead.
func (*RegistryRequest) Descriptor() ([]byte, []int) {
	return file_registry_registry_proto_rawDescGZIP(), []int{0}
}

func (x *RegistryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegistryRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RegistryRequest) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

type RegistryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegistryResponse) Reset() {
	*x = RegistryResponse{}
	mi := &file_registry_registry_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryResponse) ProtoMessage() {}

func (x *RegistryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_registry_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryResponse.ProtoReflect.Descriptor instead.
func (*RegistryResponse) Descriptor() ([]byte, []int) {
	return file_registry_registry_proto_rawDescGZIP(), []int{1}
}

func (x *RegistryResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RegistryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	mi := &file_registry_registry_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_registry_registry_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_registry_registry_proto_rawDescGZIP(), []int{2}
}

func (x *GetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Ip            string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Port          string                 `protobuf:"bytes,4,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	mi := &file_registry_registry_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_registry_registry_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_registry_registry_proto_rawDescGZIP(), []int{3}
}

func (x *GetResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *GetResponse) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

var File_registry_registry_proto protoreflect.FileDescriptor

const file_registry_registry_proto_rawDesc = "" +
	"\n" +
	"\x17registry/registry.proto\x12\bregistry\"I\n" +
	"\x0fRegistryRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x12\n" +
	"\x04port\x18\x03 \x01(\tR\x04port\"@\n" +
	"\x10RegistryResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\" \n" +
	"\n" +
	"GetRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"_\n" +
	"\vGetResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x0e\n" +
	"\x02ip\x18\x03 \x01(\tR\x02ip\x12\x12\n" +
	"\x04port\x18\x04 \x01(\tR\x04port2\x85\x01\n" +
	"\bRegistry\x12C\n" +
	"\bRegister\x12\x19.registry.RegistryRequest\x1a\x1a.registry.RegistryResponse\"\x00\x124\n" +
	"\x03Get\x12\x14.registry.GetRequest\x1a\x15.registry.GetResponse\"\x00B%Z#maxfuls.pipelines.pipeline;pipelineb\x06proto3"

var (
	file_registry_registry_proto_rawDescOnce sync.Once
	file_registry_registry_proto_rawDescData []byte
)

func file_registry_registry_proto_rawDescGZIP() []byte {
	file_registry_registry_proto_rawDescOnce.Do(func() {
		file_registry_registry_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_registry_registry_proto_rawDesc), len(file_registry_registry_proto_rawDesc)))
	})
	return file_registry_registry_proto_rawDescData
}

var file_registry_registry_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_registry_registry_proto_goTypes = []any{
	(*RegistryRequest)(nil),  // 0: registry.RegistryRequest
	(*RegistryResponse)(nil), // 1: registry.RegistryResponse
	(*GetRequest)(nil),       // 2: registry.GetRequest
	(*GetResponse)(nil),      // 3: registry.GetResponse
}
var file_registry_registry_proto_depIdxs = []int32{
	0, // 0: registry.Registry.Register:input_type -> registry.RegistryRequest
	2, // 1: registry.Registry.Get:input_type -> registry.GetRequest
	1, // 2: registry.Registry.Register:output_type -> registry.RegistryResponse
	3, // 3: registry.Registry.Get:output_type -> registry.GetResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_registry_registry_proto_init() }
func file_registry_registry_proto_init() {
	if File_registry_registry_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_registry_registry_proto_rawDesc), len(file_registry_registry_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_registry_registry_proto_goTypes,
		DependencyIndexes: file_registry_registry_proto_depIdxs,
		MessageInfos:      file_registry_registry_proto_msgTypes,
	}.Build()
	File_registry_registry_proto = out.File
	file_registry_registry_proto_goTypes = nil
	file_registry_registry_proto_depIdxs = nil
}
